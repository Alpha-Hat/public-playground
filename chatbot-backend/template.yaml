# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html
#test
# The AWSTemplateFormatVersion identifies the capabilities of the template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/format-version-structure.html
AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  chatbot-backend

  Sample SAM Template for chatbot-backend

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform:
- AWS::Serverless-2016-10-31

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Tracing: Active
  Api:
    TracingEnabled: true

#
#alpha-hat
#https://github.com/Alpha-Hat/poc-fe
#Prod
#Parameters:
#  GithubRepository: 
#    Type: String
#    Description: GitHub repository URL
#  Stage:
#    Type: String
#    Description: Deployment stage

Parameters:
  GithubRepository: 
    Type: String
    Description: GitHub repository URL
  GithubAccessToken:
    Type: String
    Description: GitHub access token
    NoEcho: true
    
Resources:
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  # This is a Lambda function config associated with the source code: bedrock.js
  #nodejs18.x
  MyTestFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: .
      Handler: src/bedrock.lambda_handler 
      Runtime: python3.9
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 600
      Policies:
        - Statement:
            - Effect: Allow
              Action: 'bedrock:*'
              Resource: '*'
                # Give Create/Read/Update/Delete Permissions to the SampleTable
      Events:
        API:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /src
            Method: post
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./src
      DockerTag: python3.9-v1
#            Auth:
#              ApiKeyRequired: false
#        getEndpoint:
#          Type: Api
#          Properties:
#            RestApiId:
#              Ref: MyApi
#            Path: /
#            Method: GET



#!Ref MyApi
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev #!Ref Stage
      Cors: 
        AllowMethods: "'*'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"
      Auth:
        ApiKeyRequired: false # sets for all methods



  # DynamoDB table to store item: {id: &lt;ID&gt;, name: &lt;NAME&gt;}
  SampleTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2



  AmplifyApp:
    Type: AWS::Amplify::App
    Properties:
      Name: chatbot-frontend
      Repository: !Ref GithubRepository
      AccessToken: !Ref GithubAccessToken
      IAMServiceRole: !GetAtt AmplifyRole.Arn
      EnvironmentVariables:
        - Name: ENDPOINT
          Value: !Sub "https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/dev/"

 

  AmplifyBranch:
    Type: AWS::Amplify::Branch
    Properties:
      BranchName: main
      AppId: !GetAtt AmplifyApp.AppId
      EnableAutoBuild: true

  AmplifyRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - amplify.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: Amplify
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: "amplify:*"
                Resource: "*"  
  
  
Outputs:
  WebEndpoint:
    Description: API Gateway endpoint URL for dev stage
    Value: !Sub "https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/dev/src/"

 